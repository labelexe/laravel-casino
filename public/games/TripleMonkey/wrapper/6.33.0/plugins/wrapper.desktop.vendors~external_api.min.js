(window.webpackJsonp1584113172148=window.webpackJsonp1584113172148||[]).push([[36],{240:function(t,e,i){"use strict";i.r(e);class n{static afterDecorator(t,e){return function(i){return function(){const n=i.apply(this,arguments);return t.apply(e||this,arguments),n}}}static beforeDecorator(t,e){return function(i){return function(){return t.apply(e||this,arguments),i.apply(this,arguments)}}}static conditionDecorator(t,e,i){return function(n){return function(){if(e&&(e.args=arguments,e.context=this),t.apply(i||this,arguments))return n.apply(this,arguments)}}}static overrideFunction(t,e,i){return t[e]=i(t[e]),t[e]}}const s="ExternalEvent.GAME_API_INITIALIZED",a="ExternalEvent.GAME_LOADING_PROGRESS",o="ExternalEvent.GAME_LOADED",r="ExternalEvent.GAME_LAZY_ASSETS_LOADED",c="ExternalEvent.ROUND_STARTED",h="ExternalEvent.ROUND_ENDED",d="ExternalEvent.PLAY_CLICKED",l="ExternalEvent.REELS_STARTED",E="ExternalEvent.REELS_STOPPED",p="ExternalEvent.TURBO_ON",u="ExternalEvent.TURBO_OFF",_="ExternalEvent.AUTO_PLAY_STARTED",A="ExternalEvent.AUTO_PLAY_STOPPED",S="ExternalEvent.PAYTABLE_OPENED",v="ExternalEvent.PAYTABLE_CLOSED",x="ExternalEvent.BET_CHANGED",I="ExternalEvent.WIN_ANIMATION_STARTED",T="ExternalEvent.WIN_ANIMATION_STOPPED",M="ExternalEvent.JACKPOT_WIN_ANIMATION_STARTED",g="ExternalEvent.JACKPOT_WIN_ANIMATION_STOPPED",C="ExternalEvent.FEATURE_STARTED",P="ExternalEvent.FEATURE_ENDED",m="ExternalEvent.STOP_BUTTON_CLICKED",N="ExternalEvent.PAUSE_GAME",L="ExternalEvent.UNPAUSE_GAME",b="AnticipationModel",O="EventDispatcher",D="RenderManager",k="UserModel",B="TurboModeModel",R="TurboButtonModel",G="AutoSpinsModel",y="CustomAutoSpinsModel",f="AutoPlayModeModel",W="SpinComponentModel",U="SoundManager",w="StakesModel",K="SlotModel",H="GameDataModel",Y="BetHelper",F="ServerService",j="UIModel",V="FeaturesModel",J="LoadManager",z="JackpotModel",X="KeyboardEventManager",q="InternalEvent.SKIP_ANTICIPATION",Q="InternalEvent.SERVER_RESPONSE",Z="InternalEvent.PAUSE_GAME",$="InternalEvent.UNPAUSE_GAME",tt="init";class et{constructor(){this.serverServiceBlackList=["WuShiJpServerService"]}initialize(t){this.api=t,this.roundEnded=!0,this.uiModel=this.api.context.getGameClassInstance(j),this.uiModel?this.uiStateChangeEventName="UI_STATE_CHANGE":this.uiStateChangeEventName="CHANGE_UI";const e=this.api.context.getGameClassInstance(F,(t,e)=>t.indexOf(e)>-1&&-1===this.serverServiceBlackList.indexOf(t));e&&e.spin&&(n.overrideFunction(e,"spin",n.beforeDecorator(this.processSpinStart,this)),this.api.addListener(Q,this.processResponse,this))}processSpinStart(){this.roundEnded&&(this.roundEnded=!1,this.responseRoundEnded=!1,this.api.removeListener(this.uiStateChangeEventName,this.onUIStateChange,this),this.api.dispatchEvent(c))}processResponse(t){t.result.request===tt?(this.roundEnded=this.responseRoundEnded=t.roundEnded,this.roundEnded||this.api.addListener(d,this.onPlayClicked,this)):(this.responseRoundEnded=t.result.roundEnded,!this.roundEnded&&this.responseRoundEnded&&this.api.addListener(this.uiStateChangeEventName,this.onUIStateChange,this))}onPlayClicked(){this.api.removeListener(d,this.onPlayClicked,this),this.api.dispatchEvent(c)}onUIStateChange(t){let e=t;!e&&this.uiModel&&(e=this.uiModel.getState()),e&&this.responseRoundEnded&&e.spin&&e.spin.enabled&&("SpinComponentState.SPIN"===e.spin.mode||"spin"===e.spin.mode||"SpinButtonState.SPIN"===e.spin.mode)&&(this.api.removeListener(this.uiStateChangeEventName,this.onUIStateChange,this),Promise.resolve().then(()=>this.finishRound()))}finishRound(){this.roundEnded=!0,this.api.dispatchEvent(h)}}class it{initialize(t){this.api=t,window.addEventListener("message",t=>{this.displayMessage(t.data)},!1)}displayMessage(t){switch(t.type){case"updateBalance":this.api.setBalance(t.value);break;case"play":this.api.playButtonClick();break;case"spin":this.api.spin();break;case"pause":this.api.pause();break;case"unpause":this.api.unpause();break;case"10auto":this.api.setAutoSpins(10,!1);break;case"until":this.api.setAutoSpins(0,!0);break;case"resetAuto":this.api.resetAutoSpins();break;case"showPaytable":this.api.showPaytable();break;case"hidePaytable":this.api.hidePaytable();break;case"turboON":this.api.setTurboMode(!0);break;case"turboOff":this.api.setTurboMode(!1);break;case"increaseBet":this.api.increaseBet();break;case"decreaseBet":this.api.decreaseBet();break;case"dispatchEvent":this.api.dispatchEvent(t.value)}}}class nt{initialize(t){if(this.api=t,this.logEventsEnabled){const e=t.context.dispatcher.emit?"emit":"dispatch";n.overrideFunction(t.context.dispatcher,e,n.beforeDecorator(this.logEventData))}}logEventData(){arguments[0]}get logEventsEnabled(){const t=this.api.context.context.api.device.getParams.logExternalEvents;return Boolean(t)}}class st{constructor(t){if(this.context=t,this.context.kernel&&this.context.kernel.mappingsMap)this.injections=this.context.kernel.mappingsMap.getAll().toArray();else{this.injections=[];const t=this.context.kernel.classMap.map;Object.keys(t).forEach(e=>{this.injections.push(t[e])})}this.context.gameInitSettings?this.gameID=this.context.gameInitSettings.gameSettingsConfig.ID:this.gameID=this.context.slotSettings.slotSettingsData.ID,this.dispatcher=this.getGameClassInstance(O),this.autoSpinsModel=this.getGameClassInstance(G),this.autoPlayModeModel=this.getGameClassInstance(f),this.customAutoSpinsModel=this.getGameClassInstance(y),this.spinComponentModel=this.getGameClassInstance(W),this.renderManager=this.getGameClassInstance(D),this.userModel=this.getGameClassInstance(k),this.stakesModel=this.getGameClassInstance(w),this.slotModel=this.getGameClassInstance(K),this.jackpotModel=this.getGameClassInstance(z),this.gameDataModel=this.getGameClassInstance(H),this.betHelper=this.getGameClassInstance(Y),this.turboModeModel=this.getGameClassInstance(B),this.turboButtonModel=this.getGameClassInstance(R),this.soundManager=this.getGameClassInstance(U),this.keyboardEventManager=this.getGameClassInstance(X)}getGameClassInstance(t,e=this.validate){for(let i=this.injections.length-1;i>=0;i--){const n=this.injections[i];let s=null;if(n.instance?s=n.instance.constructor.name:n.instanceResultConstructor?s=n.instanceResultConstructor.name:n.instanceBindedConstructor&&(s=n.instanceBindedConstructor.name),s&&e(s,t))return n.getInstance()}return null}validate(t,e){return t.indexOf(e)>-1}bindGameEventsToExternalEvent(t,e){this.isValid()&&t.forEach(t=>{this.dispatcher.addListener(t,t=>this.redispatchEvent(e,t),this)})}redispatchEvent(t,e){e?this.dispatcher.dispatch(t,e):this.dispatcher.dispatch(t)}isValid(){return!!this.dispatcher}}class at{constructor(t){this._isGameLoaded=!1,this.context=t,this.addListener(o,this.onGameLoaded,this)}isGameLoaded(){return this._isGameLoaded}pause(){this.dispatchEvent(Z)}unpause(){this.dispatchEvent($)}disableAudio(){this.context.dispatcher.dispatch("MUTE",!0),this.context.soundManager.setSoundsMute&&this.context.soundManager.setSoundsMute(!0)}enableAudio(){this.context.dispatcher.dispatch("MUTE",!1),this.context.soundManager.setSoundsMute&&this.context.soundManager.setSoundsMute(!1)}playButtonClick(){this.context.dispatcher.dispatch("CommonEvent.PLAY_CLICK"),this.context.dispatcher.dispatch("Event.PLAY_CLICK"),this.context.dispatcher.dispatch("PLAY_CLICK"),this.context.dispatcher.dispatch("playBtn_clicked_mediator")}showPaytable(){this.context.dispatcher.dispatch("SHOW_PAYTABLE"),this.context.dispatcher.dispatch("GameRunEvents.SHOW_PAYTABLE","paytable_group"),this.context.dispatcher.dispatch("UIControlsEvent.INFO_BUTTON_CLICK")}hidePaytable(){this.context.dispatcher.dispatch("HIDE_PAYTABLE"),this.context.dispatcher.dispatch("GameRunEvents.HIDE_PAYTABLE"),this.context.dispatcher.dispatch("MainSceneEvents.HIDE_PAYTABLE"),this.context.dispatcher.dispatch("PaytableEvents.HIDE_PAYTABLE")}setBalance(t){this.context.userModel.balance=t,this.context.context.updateViewBalance?this.context.context.updateViewBalance(t):this.context.dispatcher.dispatch("UPDATE_VIEW_BALANCE",t)}getBalance(){return this.context.userModel.balance}getCurrency(){return this.context.userModel.currency}getCurrencySymbol(){return this.context.userModel.currencySign}increaseBet(){this.context.stakesModel.increaseStake()}decreaseBet(){this.context.stakesModel.decreaseStake()}setMaxBet(){this.context.stakesModel.currentStakeIndex=this.context.stakesModel.stakes.length-1,this.context.stakesModel.increaseStake()}setMinBet(){this.context.stakesModel.currentStakeIndex=0,this.context.stakesModel.decreaseStake()}getCoinValue(){return this.context.stakesModel.currentStakeValue}getTotalBet(){return this.context.betHelper?this.context.betHelper.getTotalBet():this.context.stakesModel.getTotalBet()}getAvailableCoins(){return this.context.stakesModel.stakes}getCurrentBetsIndex(){return this.context.stakesModel.currentStakeIndex}dispatchEvent(t,e){this.context&&this.context.dispatcher&&this.context.dispatcher.dispatch(t,e)}addListener(t,e,i){return this.context&&this.context.dispatcher&&this.context.dispatcher.addListener(t,e,i),this}addListenerOnce(t,e,i){return this.context&&this.context.dispatcher&&(this.context.dispatcher.once?this.context.dispatcher.once(t,e,i):this.context.dispatcher.addListener(t,e,i).once()),this}removeListener(t,e,i){return this.context&&this.context.dispatcher&&this.context.dispatcher.removeListener(t,e,i),this}getTotalWin(){return this.context&&this.context.gameDataModel?this.context.gameDataModel.totalWinning:-1}getJackpotWin(){return this.context&&this.context.jackpotModel?this.context.jackpotModel.jackpotWinValue:0}isJackpotJustWon(){return!(!this.context||!this.context.jackpotModel)&&this.context.jackpotModel.isJustWon}onGameLoaded(){this.removeListener(o,this.onGameLoaded,this),this._isGameLoaded=!0}getElementById(t,e){if(e||(e=this.context.renderManager.objectToRender),e.id===t||e.name===t)return e;let i=null;if(e.children&&e.children.length>0){const n=e.children.length;for(let s=0;s<n&&(i=this.getElementById(t,e.children[s]),!i);s++);}return i}}class ot extends at{constructor(){super(...arguments),this.autoSpinStartTimeout=500}setAutoSpins(t,e){this.clearAutoSpinWaiting(),this.addListener(l,this.onSpinStarted,this),this.autoSpinStartTimeoutID=window.setTimeout(()=>{this.dispatchEvent("READY_TO_SPIN"),this.dispatchEvent("BottomBarEvent.READY_TO_SPIN"),this.autoSpinStartTimeoutID=window.setTimeout(()=>{this.clearAutoSpinWaiting(),this.dispatchEvent("SPIN_CLICK"),this.dispatchEvent("BottomBarEvent.SPIN_CLICK")},this.autoSpinStartTimeout)},this.autoSpinStartTimeout),this.context.autoSpinsModel.activate(t,e)}clearAutoSpinWaiting(){this.removeListener(l,this.onSpinStarted,this),window.clearTimeout(this.autoSpinStartTimeoutID)}onSpinStarted(){this.clearAutoSpinWaiting()}resetAutoSpins(){this.clearAutoSpinWaiting(),this.isAutoSpinsActive()&&(this.context.autoSpinsModel.deactivate(),this.context.dispatcher.dispatch("BottomBarEvent.STOP_AUTO_SPINS_CLICK"),this.context.dispatcher.dispatch("STOP_AUTO_SPINS_CLICK")),this.isCustomAutoplayActive()&&(this.context.customAutoSpinsModel.isAutoSpinsActive=!1)}getAutoSpinsNumber(){return this.context.autoSpinsModel.autoSpinsCount}isUntilFeature(){return this.context.autoSpinsModel.isUntilFeature}getTotalBetDefaultStake(){const t=this.context.stakesModel,e=this.context.slotModel,i=this.context.betHelper;if(i){const e=i.getTotalBet()/t.currentStakeValue;return t.stakeDefault*e}{const i=t.anteBetCoinsCount?t.stakeDefault*t.anteBetCoinsCount:0,n=t.totalBetMultiplier>1?t.totalBetMultiplier:e.paylineCount;return t.stakeDefault*t.currentCoinsValue*n+i}}getTotalBet(){const t=this.context.betHelper;if(t)return t.getTotalBet();return this.context.stakesModel.getTotalBet()}spin(){this.context.dispatcher.dispatch("SPIN_CLICK"),this.context.dispatcher.dispatch("READY_TO_SPIN"),this.context.dispatcher.dispatch("BottomBarEvent.SPIN_CLICK"),this.context.dispatcher.dispatch("BottomBarEvent.READY_TO_SPIN"),this.context.dispatcher.dispatch("UIControlsEvent.SPIN_START_REQUESTED"),this.context.dispatcher.dispatch("UIControlsEvent.SPIN_COMPONENT_PRESSED"),this.context.dispatcher.dispatch("UIControlsEvent.SPIN_COMPONENT_RELEASED")}getTurboMode(){return this.context.turboButtonModel?this.context.turboButtonModel.isOn:this.context.turboModeModel.isActive}setTurboMode(t){this.context.turboButtonModel&&(this.context.turboButtonModel.isOn=t),this.context.turboModeModel.canBeActive=t}skipAnticipation(){this.context.dispatcher.dispatch(q)}isAutoSpinsActive(){return!!(this.context.autoSpinsModel.isActive||this.context.autoPlayModeModel&&this.context.autoPlayModeModel.checkIfAutoSpinActive&&this.context.autoPlayModeModel.checkIfAutoSpinActive())}isContinuousSpinsActive(){return!(!this.context.spinComponentModel||!this.context.spinComponentModel.isContinuousSpin)}isCustomAutoplayActive(){return!(!this.context.customAutoSpinsModel||!this.context.customAutoSpinsModel.isAutoSpinsActive)}}class rt extends at{constructor(t){super(t)}}class ct extends at{constructor(t){super(t)}}class ht{initialize(t){this.api=t,this.bindLoadingEvents(),this.bindPlayButtonClickEvents(),this.bindReelsEvents(),this.bindTurboModeEvents(),this.bindAutoPlayModeEvents(),this.bindPaytableEvents(),this.bindStakeChangeEvents(),this.bindWinAnimationEvents(),this.bindJackpotEvents(),this.bindStopButtonEvents()}bindLoadingEvents(){this.api.context.bindGameEventsToExternalEvent(["CommonEvent.GAME_LOADING","Event.GAME_LOADING","GAME_LOADING"],a),this.api.context.bindGameEventsToExternalEvent(["CommonEvent.GAME_LOADED","Event.GAME_LOADED","GAME_LOADED"],o);const t=this.api.context.getGameClassInstance(J);if(t&&void 0!==t.onLazyAssetsLoaded)t.onLazyAssetsLoaded.then(()=>{this.api.dispatchEvent(r)});else{const t=()=>{this.api.removeListener(o,t,this),this.api.dispatchEvent(r)};this.api.addListener(o,t,this)}}bindPlayButtonClickEvents(){this.api.context.bindGameEventsToExternalEvent(["CommonEvent.PLAY_CLICK","Event.PLAY_CLICK","PLAY_CLICK","playBtn_clicked_mediator"],d)}bindReelsEvents(){this.api.context.bindGameEventsToExternalEvent(["SlotEvent.REELS_SPIN_STARTED","Event.REELS_SPIN_STARTED","REELS_SPIN_STARTED","RespinEvent.REELS_SPIN_STARTED"],l),this.api.context.bindGameEventsToExternalEvent(["SlotEvent.REELS_SPIN_STOPPED","Event.REELS_SPIN_STOPPED","REELS_SPIN_STOPPED","RespinEvent.REELS_SPIN_STOPPED"],E)}bindTurboModeEvents(){this.api.addListener("TURBO_MODE_CHANGE",()=>{this.api.getTurboMode()?this.api.dispatchEvent(p):this.api.dispatchEvent(u)},this)}bindAutoPlayModeEvents(){this.api.context.bindGameEventsToExternalEvent(["AUTO_SPINS_ACTIVATE"],_),this.api.context.bindGameEventsToExternalEvent(["AUTO_SPINS_DEACTIVATE"],A),this.api.addListener("AUTO_SPINS_STATE_CHANGE",t=>{void 0!==t&&"number"==typeof t&&(0===t?this.api.dispatchEvent(_):this.api.dispatchEvent(A))},this),this.api.addListener("Mark4AutoSpinsModelEvent.AUTO_SPINS_STATE_CHANGE",t=>{switch(t){case"AutoSpinsChangeStateReason.ACTIVATING":this.api.dispatchEvent(_);break;case"AutoSpinsChangeStateReason.DEACTIVATING":case"AutoSpinsChangeStateReason.DEACTIVATED_BY_COUNTER":this.api.dispatchEvent(A)}},this)}bindPaytableEvents(){this.api.context.bindGameEventsToExternalEvent(["GameRunEvents.PAYTABLE_SHOWN","PaytableEvents.PAYTABLE_SHOWN","PAYTABLE_SHOWN","paytableOpen","PAYTABLE_OPENED"],S),this.api.context.bindGameEventsToExternalEvent(["GameRunEvents.PAYTABLE_HIDDEN","PaytableEvents.PAYTABLE_HIDDEN","PAYTABLE_HIDDEN","paytableClose","PAYTABLE_CLOSED"],v),this.api.addListener("PayTableModelEvents.PAYTABLE_VISIBILITY_CHANGE",t=>{!0===t?this.api.dispatchEvent(S):this.api.dispatchEvent(v)},this)}bindStakeChangeEvents(){this.api.addListener("STAKES_CHANGE",()=>{this.api.dispatchEvent(x,this.api.getTotalBet())},this),this.api.addListener("StakesModelEvent.STAKES_CHANGE",()=>{this.api.dispatchEvent(x,this.api.getTotalBet())},this)}bindWinAnimationEvents(){this.api.context.bindGameEventsToExternalEvent(["TICKUP_STARTED","BIG_WIN_INIT_ANIMATION","BigWinEvents.BIG_WIN_INIT_ANIMATION","WinBoxEvents.SHOW_WIN_AMOUNT","Mark4WinBoxEvents.SHOW_WIN_AMOUNT","WinBoxEvent.TICKUP_STARTED","SHOW_WIN_AMOUNT"],I),this.api.context.bindGameEventsToExternalEvent(["TICKUP_ENDED","BIG_WIN_ANIMATION_COMPLETE","BigWinEvents.BIG_WIN_ANIMATION_COMPLETE","Mark4WinBoxEvents.WIN_TICKUP_COMPLETE","WinBoxEvent.WIN_TICKUP_COMPLETE","WinBoxEvents.WIN_TICKUP_COMPLETE","WinBoxEvents.SKIP_WIN_ANIMATION_COMPLETE","Mark4WinBoxEvents.SKIP_WIN_ANIMATION_COMPLETE","WinBoxEvent.TICKUP_ENDED","COUNT_UP_COMPLETE"],T)}bindJackpotEvents(){this.api.context.bindGameEventsToExternalEvent(["JackpotEvent.WIN_ANIMATION_STARTED"],M),this.api.context.bindGameEventsToExternalEvent(["JackpotEvent.WIN_ANIMATION_STOPPED"],g)}bindStopButtonEvents(){this.api.context.bindGameEventsToExternalEvent(["Intent.STOP_SPIN","STOP_CLICK","BottomBarEvent.STOP_CLICK","UIControlsEvent.SPIN_STOP_REQUESTED"],m)}}const dt="BigWinEvents.BIG_WIN_HAS_BEEN_WON_ANALYTICS",lt="BigWinEvents.BIG_WIN_HAS_BEEN_SKIPPED_ANALYTICS",Et="BigWinEvents.MEGA_WIN_HAS_BEEN_WON_ANALYTICS",pt="BigWinEvents.MEGA_WIN_HAS_BEEN_SKIPPED_ANALYTICS";class ut{initialize(t){[dt,lt,Et,pt].forEach(e=>{t.addListener(e,()=>t.wrapperAPI.addToAnalyticsLog(e))})}}class _t{initialize(t){this.api=t,this.anticipationModel=this.api.context.getGameClassInstance(b),this.api.addListener(q,this.skipAnticipation,this)}skipAnticipation(){let t;t=this.api.context.context.slotParameters?this.api.context.context.slotParameters:this.api.context.slotModel.getSlotConfig(),t.anticipation&&t.anticipation.symbols&&this.anticipationModel&&this.anticipationModel.anticipationConfig&&(this.anticipationConfig=this.copyObject(this.anticipationModel.anticipationConfig),this.anticipationModel.anticipationConfig.symbols={},this.anticipationModel.anticipationConfig.animation.time=1e-6,this.anticipationModel.anticipationConfig.animation.turboTime=1e-6,this.api.addListener(h,this.roundEndedHandler,this))}roundEndedHandler(){this.api.removeListener(h,this.roundEndedHandler),this.anticipationModel&&this.anticipationModel.anticipationConfig&&(this.anticipationModel.anticipationConfig.symbols=this.copyObject(this.anticipationConfig.symbols),this.anticipationModel.anticipationConfig.animation=this.copyObject(this.anticipationConfig.animation))}copyObject(t){return JSON.parse(JSON.stringify(t))}}class At{constructor(){this.featureInProgress=!1}initialize(t){this.api=t,this.featuresModel=this.api.context.getGameClassInstance(V,this.validateFeaturesModel),this.api.addListener(Q,this.processResponse,this),this.api.addListener("FeatureEvent.USER_ACTION_LOCK_CHANGE",this.onUserActionLockChanged,this)}validateFeaturesModel(t,e){return t.indexOf(e)>-1&&-1===t.indexOf("Action")}onUserActionLockChanged(){this.featuresModel.isFeatureJustWon&&this.featuresModel.isUserActionLocked&&this.handleFeatureStart()}processResponse(t){this.api.removeListener(Q,this.processResponse,this),t.result.request!==tt||t.roundEnded||this.api.addListener(d,this.onPlayClicked,this)}onPlayClicked(){this.api.removeListener(d,this.onPlayClicked,this),this.handleFeatureStart()}handleFeatureStart(){this.featureInProgress||(this.featureInProgress=!0,this.api.dispatchEvent(C),this.api.addListener(h,this.onRoundEnded,this))}onRoundEnded(){this.featureInProgress=!1,this.api.removeListener(h,this.onRoundEnded,this),this.api.dispatchEvent(P)}}class St{initialize(t){this.api=t;const e=this.api.context.getGameClassInstance(F);e&&n.overrideFunction(e,"processResponse",n.beforeDecorator(this.processResponse,this))}processResponse(){const t=arguments[0];this.api.dispatchEvent(Q,t)}}class vt{constructor(){this.winAnimationFallbackDelay=200}initialize(t){this.api=t,this.api.addListener(I,this.onWinAnimationStarted,this)}onWinAnimationStarted(t){!this.isWaitForAnimationStop&&t&&t.time&&t.time>0&&(this.isWaitForAnimationStop=!0,this.api.addListenerOnce(T,this.onWinAnimationStopped,this),this.winAnimationTimeoutID=window.setTimeout(()=>{this.api.dispatchEvent(T),this.api.removeListener(T,this.onWinAnimationStopped,this)},1e3*t.time+this.winAnimationFallbackDelay))}onWinAnimationStopped(){this.isWaitForAnimationStop=!1,window.clearTimeout(this.winAnimationTimeoutID)}}class xt{constructor(){this._defaultPauseConfig={stopRendering:!1,muteAudio:!0,lockUI:!0},this._isPaused=!1,this._currentPauseConfig=this._defaultPauseConfig,this._waitActionsNames=["CollapsingWaitSpinAction","WaitSpinAction"],this._overrideFunctions=[]}initialize(t){this._api=t,this._context=t.context,this._api.addListenerOnce(o,this.onGameLoaded,this)}isNotPaused(){return!this._isPaused}onGameLoaded(){this._waitActionsNames.forEach(t=>{const e=this._context.getGameClassInstance(t);if(e){const t={args:null,context:null},i=n.overrideFunction(e.constructor.prototype,"startWithCheck",n.conditionDecorator(this.isNotPaused,t,this));i&&this._overrideFunctions.push({checkMethod:i,argsHolder:t})}}),this._overrideFunctions.length,this._context.keyboardEventManager&&(n.overrideFunction(this._context.keyboardEventManager,"onKeyboardEvent",n.conditionDecorator(this.isNotPaused,null,this)),n.overrideFunction(this._context.keyboardEventManager,"onKeyDown",n.conditionDecorator(this.isNotPaused,null,this)),n.overrideFunction(this._context.keyboardEventManager,"onKeyUp",n.conditionDecorator(this.isNotPaused,null,this)),n.overrideFunction(this._context.keyboardEventManager,"onKeyDownMark2",n.conditionDecorator(this.isNotPaused,null,this)),n.overrideFunction(this._context.keyboardEventManager,"onKeyUpMark2",n.conditionDecorator(this.isNotPaused,null,this))),this._api.addListener(Z,this.onPauseGame,this),this._api.addListener($,this.onUnpauseGame,this)}onPauseGame(t){this._isPaused||(this._isPaused=!0,this._currentPauseConfig=t||this._defaultPauseConfig,this._currentPauseConfig.muteAudio&&this._api.disableAudio(),this.lockUI(),this.stopRendering(),this._overrideFunctions.forEach(t=>{t.argsHolder.args=null,t.argsHolder.context=null}),this._context.dispatcher.dispatch(N))}onUnpauseGame(){this._isPaused&&(this._isPaused=!1,this._currentPauseConfig.muteAudio&&this._api.enableAudio(),this.unlockUI(),this.startRendering(),this._overrideFunctions.forEach(t=>{t.argsHolder.args&&(t.checkMethod.apply(t.argsHolder.context,t.argsHolder.args),t.argsHolder.args=null,t.argsHolder.context=null)}),this._context.dispatcher.dispatch(L))}lockUI(){this._context.renderManager.objectToRender&&this._currentPauseConfig.lockUI&&(this._context.renderManager.objectToRender.interactiveChildren=!1,this._context.renderManager.objectToRender.interactive=!1,this._context.renderManager.getCanvasElement().style.pointerEvents="none")}unlockUI(){this._context.renderManager.objectToRender&&this._currentPauseConfig.lockUI&&(this._context.renderManager.objectToRender.interactiveChildren=!0,this._context.renderManager.objectToRender.interactive=!0,this._context.renderManager.getCanvasElement().style.pointerEvents="")}stopRendering(){this._currentPauseConfig.stopRendering&&this._context.renderManager.objectToRender&&(this._context.ticker.stop(),this._context.pausedRenderObject=this._context.renderManager.objectToRender,this._context.renderManager.objectToRender=null)}startRendering(){this._currentPauseConfig.stopRendering&&this._context.renderManager.objectToRender&&(this._context.ticker.start(),this._context.renderManager.objectToRender=this._context.pausedRenderObject)}}i.d(e,"ExternalAPI",(function(){return It}));class It{static initialize(t,e,i="SLOT"){const n=class{static create(t,e){const i=new st(t);switch(i.gameType=e,e){case"SLOT":return new ot(i);case"CARD":return new rt(i);case"TABLE":return new ct(i);default:return new at(i)}}}.create(t,i);n.context.ticker=e,n.context.isValid()&&(window[It.GAME_API_KEY]=n,It.addModules(),It.MODULES.forEach(t=>t.initialize(n)),window.postMessage(s,"*"))}static addModules(){It.registerModule(new St),It.registerModule(new et),It.registerModule(new ht),It.registerModule(new vt),It.registerModule(new ut),It.registerModule(new xt),It.registerModule(new _t),It.registerModule(new At),It.registerModule(new it,!0),It.registerModule(new nt,!0)}static registerModule(t,e=!1){e||It.MODULES.push(t)}}It.GAME_API_KEY="GameAPI",It.SW_CONTEXT_KEY="swContext",It.MODULES=[];const Tt=Date.now(),Mt=window.setInterval(()=>{window[It.SW_CONTEXT_KEY]?(clearInterval(Mt),It.initialize(window[It.SW_CONTEXT_KEY].context,window[It.SW_CONTEXT_KEY].PIXI.ticker.shared,window[It.SW_CONTEXT_KEY].gameType||"SLOT")):Date.now()-Tt>3e5&&clearInterval(Mt)},100)}}]);